android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.twitch.homescreenlock.CensusPostTask -> com.twitch.homescreenlock.a:
    void makeLocalEntry(android.content.Context,com.twitch.homescreenlock.CensusResponse) -> a
    java.lang.Void doInBackground(com.twitch.homescreenlock.CensusPostTask$Param[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.twitch.homescreenlock.CensusPostTask$Param -> com.twitch.homescreenlock.b:
    android.content.Context c -> a
    com.twitch.homescreenlock.CensusResponse response -> b
    com.twitch.homescreenlock.CensusPostTask this$0 -> c
com.twitch.homescreenlock.CensusResponse -> com.twitch.homescreenlock.c:
    java.lang.String[] POST_URLS -> b
    java.lang.String[] APP_NAMES -> c
    java.lang.String url -> d
    java.util.HashMap params -> e
    com.twitch.homescreenlock.CensusResponse$CensusAppType type -> a
    java.lang.String getUrl() -> a
    java.util.HashMap getParams() -> b
com.twitch.homescreenlock.CensusResponse$CensusAppType -> com.twitch.homescreenlock.d:
    com.twitch.homescreenlock.CensusResponse$CensusAppType PEOPLE -> a
    com.twitch.homescreenlock.CensusResponse$CensusAppType ACTIVITY -> b
    com.twitch.homescreenlock.CensusResponse$CensusAppType DRESS -> c
    com.twitch.homescreenlock.CensusResponse$CensusAppType ENERGY -> d
    com.twitch.homescreenlock.CensusResponse$CensusAppType SLIDE_TO_UNLOCK -> e
    com.twitch.homescreenlock.CensusResponse$CensusAppType STRUCTURE_THE_WEB -> f
    com.twitch.homescreenlock.CensusResponse$CensusAppType[] ENUM$VALUES -> g
    com.twitch.homescreenlock.CensusResponse$CensusAppType[] values() -> values
    com.twitch.homescreenlock.CensusResponse$CensusAppType valueOf(java.lang.String) -> valueOf
com.twitch.homescreenlock.CogStudyPostTask -> com.twitch.homescreenlock.e:
    void dumpToFile(android.app.Activity) -> a
    java.lang.Void doInBackground(android.app.Activity[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.twitch.homescreenlock.CustomDigitalClock -> com.twitch.homescreenlock.CustomDigitalClock:
    java.util.Calendar mCalendar -> a
    com.twitch.homescreenlock.CustomDigitalClock$FormatChangeObserver mFormatChangeObserver -> c
    java.lang.Runnable mTicker -> d
    android.os.Handler mHandler -> e
    boolean mTickerStopped -> f
    java.lang.String mFormat -> b
    void initClock(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean get24HourMode() -> get24HourMode
    void setFormat() -> a
    void access$0(com.twitch.homescreenlock.CustomDigitalClock) -> a
    boolean access$1(com.twitch.homescreenlock.CustomDigitalClock) -> b
    android.os.Handler access$2(com.twitch.homescreenlock.CustomDigitalClock) -> c
    java.lang.Runnable access$3(com.twitch.homescreenlock.CustomDigitalClock) -> d
com.twitch.homescreenlock.CustomDigitalClock$1 -> com.twitch.homescreenlock.f:
    com.twitch.homescreenlock.CustomDigitalClock this$0 -> a
    void run() -> run
com.twitch.homescreenlock.CustomDigitalClock$FormatChangeObserver -> com.twitch.homescreenlock.g:
    com.twitch.homescreenlock.CustomDigitalClock this$0 -> a
    void onChange(boolean) -> onChange
com.twitch.homescreenlock.GeocodingTask -> com.twitch.homescreenlock.h:
    java.lang.Void doInBackground(com.twitch.homescreenlock.GeocodingTask$Param[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.twitch.homescreenlock.GeocodingTask$Param -> com.twitch.homescreenlock.i:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    android.app.Activity a -> c
    com.twitch.homescreenlock.GeocodingTask this$0 -> d
com.twitch.homescreenlock.HomeScreenLock -> com.twitch.homescreenlock.HomeScreenLock:
    android.content.Context twitchContext -> a
    void onCreate() -> onCreate
    android.content.Context getContext() -> a
com.twitch.homescreenlock.HomeScreenLockActivity -> com.twitch.homescreenlock.HomeScreenLockActivity:
    boolean mExternalStorageAvailable -> a
    boolean mExternalStorageWriteable -> b
    boolean showEmailDialog -> c
    boolean shownHomeLauncher -> d
    int currScreen -> e
    int NUM_SCREENS -> f
    android.widget.LinearLayout emailLayout -> g
    android.widget.LinearLayout homeLauncherLayout -> h
    android.widget.LinearLayout securityLayout -> i
    android.widget.TextView header -> j
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    boolean didPartialInstall() -> b
    void setPartialInstall() -> c
    void changeDisplay() -> a
    void onClick(android.view.View) -> onClick
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.twitch.homescreenlock.HomeScreenLockActivity$1 -> com.twitch.homescreenlock.j:
    com.twitch.homescreenlock.HomeScreenLockActivity this$0 -> a
    android.app.Activity val$a -> b
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.HomeScreenLockActivity$2 -> com.twitch.homescreenlock.k:
    com.twitch.homescreenlock.HomeScreenLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.HomeScreenLockActivity$3 -> com.twitch.homescreenlock.l:
    com.twitch.homescreenlock.HomeScreenLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.HomeScreenLockActivity$4 -> com.twitch.homescreenlock.m:
    com.twitch.homescreenlock.HomeScreenLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.HomeScreenLockMain -> com.twitch.homescreenlock.HomeScreenLockMain:
    android.view.VelocityTracker mVelocityTracker -> l
    java.lang.String mCurrentPhotoPath -> m
    java.lang.String topImageURL -> a
    int randomRowTop -> b
    java.lang.String bottomImageURL -> c
    int randomRowBottom -> d
    boolean mExternalStorageAvailable -> e
    boolean mExternalStorageWriteable -> f
    java.lang.String state -> g
    long startTime -> h
    long endTime -> i
    java.lang.String flagToast -> j
    java.lang.String flagToastDynamicImages -> k
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startCameraIntent() -> a
    void galleryAddPic() -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onTouchGesture(android.view.MotionEvent,java.lang.String) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean doesDatabaseExist(android.content.ContextWrapper,java.lang.String) -> a
    void access$0(com.twitch.homescreenlock.HomeScreenLockMain) -> a
com.twitch.homescreenlock.HomeScreenLockMain$1 -> com.twitch.homescreenlock.n:
    com.twitch.homescreenlock.HomeScreenLockMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.HomeScreenLockMain$2 -> com.twitch.homescreenlock.o:
    com.twitch.homescreenlock.HomeScreenLockMain this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.twitch.homescreenlock.HomeScreenLockMain$downloadImages -> com.twitch.homescreenlock.p:
    com.twitch.homescreenlock.HomeScreenLockMain this$0 -> a
    java.lang.Void doInBackground(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.twitch.homescreenlock.LockScreenBroadcast -> com.twitch.homescreenlock.LockScreenBroadcast:
    long startTime -> a
    java.util.HashSet twitchActivities -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void launchTwitchActivity(android.content.Context) -> c
    boolean forceSlideToUnlock(android.content.Context) -> d
    boolean isCallActive(android.content.Context) -> a
    boolean isTwitchRunning(android.content.Context) -> b
    void initTwitchActivities() -> a
com.twitch.homescreenlock.LockScreenService -> com.twitch.homescreenlock.LockScreenService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    boolean isRunning() -> a
com.twitch.homescreenlock.LockScreenSettings -> com.twitch.homescreenlock.LockScreenSettings:
    void onCreate(android.os.Bundle) -> onCreate
com.twitch.homescreenlock.Log -> com.twitch.homescreenlock.q:
    void d(java.lang.String,java.lang.String) -> a
com.twitch.homescreenlock.PhotoRankingDumpTask -> com.twitch.homescreenlock.r:
    void dumpToFile(android.app.Activity) -> a
    java.lang.Void doInBackground(android.app.Activity[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.twitch.homescreenlock.SlideToUnlock -> com.twitch.homescreenlock.SlideToUnlock:
    int finalProgress -> a
    double latitude -> b
    double longitude -> c
    android.location.LocationManager locationManager -> d
    java.lang.String towers -> e
    boolean activeUnlock -> f
    java.lang.String timeStamp -> g
    java.lang.String location -> h
    java.lang.String latlong -> i
    boolean success -> j
    java.lang.String address -> k
    java.lang.String city -> l
    java.lang.String country -> m
    long startTime -> n
    long endTime -> o
    java.lang.String toastText -> p
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.twitch.homescreenlock.StructuringTheWeb -> com.twitch.homescreenlock.StructuringTheWeb:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    long startTime -> c
    long endTime -> d
    java.lang.String[] extraction -> e
    java.lang.String sourceSentence -> f
    java.lang.String topic -> g
    java.lang.String[] demoSentences -> h
    java.lang.String[] demoExtractions -> i
    android.widget.ImageButton imageButtonRight -> j
    android.widget.ImageButton imageButtonWrong -> k
    android.widget.ImageButton imageButtonInfo -> l
    android.widget.TextView textSentence -> m
    android.widget.TextView textExtraction -> n
    android.widget.TextView header -> o
    java.lang.String COLOR_TOPIC -> p
    java.lang.String COLOR_RELATION -> q
    java.lang.String COLOR_OBJECT -> r
    android.widget.ScrollView app_layout -> s
    android.widget.ScrollView explanation -> t
    android.widget.Button doneButton -> u
    boolean showingExplanation -> v
    int[] UNFILLED_ICONS -> w
    int[] FILLED_ICONS -> x
    void onCreate(android.os.Bundle) -> onCreate
    void setupExplanation() -> a
    void doneShowingExplanation() -> b
    java.lang.String[] getTabSeparatedExtraction() -> c
    int getNumExtractionLines(android.content.res.AssetManager,java.lang.String) -> a
    void setSentenceTextFormatted(java.lang.String[]) -> a
    void addToFormatted(java.lang.StringBuilder,java.lang.String[],int,int) -> a
    void setExtractionTextFormatted(java.lang.String[]) -> b
    void setImageButtons(boolean,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setupLocationListening() -> d
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void access$0(com.twitch.homescreenlock.StructuringTheWeb) -> a
com.twitch.homescreenlock.StructuringTheWeb$1 -> com.twitch.homescreenlock.s:
    com.twitch.homescreenlock.StructuringTheWeb this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.StructuringTheWeb$2 -> com.twitch.homescreenlock.t:
    com.twitch.homescreenlock.StructuringTheWeb this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.StructuringTheWeb$3 -> com.twitch.homescreenlock.u:
    com.twitch.homescreenlock.StructuringTheWeb this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.twitch.homescreenlock.TwitchCensusActivity -> com.twitch.homescreenlock.TwitchCensusActivity:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    boolean activeDress -> c
    long startTime -> d
    long endTime -> e
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onClick(android.view.View) -> onClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.twitch.homescreenlock.TwitchCensusActivity$1 -> com.twitch.homescreenlock.v:
    com.twitch.homescreenlock.TwitchCensusActivity this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.twitch.homescreenlock.TwitchCensusDress -> com.twitch.homescreenlock.TwitchCensusDress:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    boolean activeDress -> c
    long startTime -> d
    long endTime -> e
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onClick(android.view.View) -> onClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.twitch.homescreenlock.TwitchCensusDress$1 -> com.twitch.homescreenlock.w:
    com.twitch.homescreenlock.TwitchCensusDress this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.twitch.homescreenlock.TwitchCensusEnergy -> com.twitch.homescreenlock.TwitchCensusEnergy:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    boolean activeEnergy -> c
    java.lang.String energyLevel -> d
    long startTime -> e
    long endTime -> f
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.TwitchCensusEnergy$1 -> com.twitch.homescreenlock.x:
    com.twitch.homescreenlock.TwitchCensusEnergy this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.twitch.homescreenlock.TwitchCensusFlow -> com.twitch.homescreenlock.TwitchCensusFlow:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    long startTime -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void finishCensusFlow() -> a
    void setupLocationListening() -> b
    void setupHomeScreen() -> c
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.twitch.homescreenlock.TwitchCensusPeople -> com.twitch.homescreenlock.TwitchCensusPeople:
    android.location.LocationManager locationManager -> a
    java.lang.String towers -> b
    boolean activePeople -> c
    long startTime -> d
    long endTime -> e
    void onBackPressed() -> onBackPressed
    void onUserLeaveHint() -> onUserLeaveHint
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onClick(android.view.View) -> onClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.twitch.homescreenlock.TwitchCensusPeople$1 -> com.twitch.homescreenlock.y:
    com.twitch.homescreenlock.TwitchCensusPeople this$0 -> a
    android.widget.Toast val$toast -> b
    void run() -> run
com.twitch.homescreenlock.TwitchCognitiveLoad -> com.twitch.homescreenlock.TwitchCognitiveLoad:
    double TWITCH_CHANCE -> a
    long startTime -> b
    long endTime -> c
    java.lang.String currTask -> d
    java.lang.String prevTask -> e
    int iterations -> f
    android.widget.TextView header -> g
    android.widget.TextView roundCounter -> h
    double SAME_LETTER_CHANCE -> i
    java.lang.String letters -> j
    int N_BACK -> k
    java.util.Queue prevLetterIndices -> l
    int letterIndex -> m
    android.widget.TextView bigLetter -> n
    android.widget.Button nextLetterButton -> o
    android.widget.Button yesButton -> p
    android.widget.Button noButton -> q
    android.widget.LinearLayout letterLayout -> r
    android.widget.LinearLayout nextButtonLayout -> s
    android.widget.LinearLayout yesNoButtonsLayout -> t
    int ROUNDS_TO_DO -> u
    int TASKS_AFTER_ROUND -> v
    java.util.ArrayList twitchTaskRound -> w
    int currTwitchTaskIndex -> x
    int currTasksAfterRound -> y
    boolean twitchRoundDone -> z
    int roundsCompleted -> A
    int iterationsThisRound -> B
    boolean prevWasTwitch -> C
    android.widget.SeekBar seekEnergy -> D
    android.widget.ImageView lockImage -> E
    android.widget.LinearLayout slideLayout -> F
    android.widget.LinearLayout picRow1 -> G
    android.widget.LinearLayout picRow2 -> H
    android.widget.LinearLayout picRow3 -> I
    android.widget.ImageButton[] imgButtons -> J
    android.widget.ImageView pic1 -> K
    android.widget.ImageView pic2 -> L
    android.widget.LinearLayout layoutPhotoRanking -> M
    int[] peopleImgIDs -> N
    int[] activityImgIDs -> O
    int[] dressImgIDs -> P
    int[] energyImgIDs -> Q
    java.lang.Integer[] photoIDs -> R
    java.util.Queue photoIDqueue -> S
    void onUserLeaveHint() -> onUserLeaveHint
    void onCreate(android.os.Bundle) -> onCreate
    void cogStudyDone() -> e
    void populatePhotoIDqueue() -> f
    void changeDisplay() -> a
    void hideLetterStuff() -> g
    void hideTwitchStuff() -> h
    void displayIntro() -> b
    void displayLetter() -> c
    void handleNBackAnswer(boolean) -> a
    void displayTwitch() -> d
    void setupImgButtons(int,int,int[],boolean) -> a
    void onClick(android.view.View) -> onClick
    java.lang.String getNextTwitchTask() -> i
    void resetTwitchTasks() -> j
    void logEntry(java.lang.Boolean,java.lang.Boolean) -> a
    void logEntry() -> k
    int shortestDuration() -> l
    int getNextLetterIndex() -> m
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onBackPressed() -> onBackPressed
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void access$0(com.twitch.homescreenlock.TwitchCognitiveLoad) -> a
com.twitch.homescreenlock.TwitchCognitiveLoad$1 -> com.twitch.homescreenlock.z:
    com.twitch.homescreenlock.TwitchCognitiveLoad this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.TwitchCognitiveLoad$2 -> com.twitch.homescreenlock.aa:
    com.twitch.homescreenlock.TwitchCognitiveLoad this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.TwitchCognitiveLoad$3 -> com.twitch.homescreenlock.ab:
    com.twitch.homescreenlock.TwitchCognitiveLoad this$0 -> a
    void onClick(android.view.View) -> onClick
com.twitch.homescreenlock.TwitchConstants -> com.twitch.homescreenlock.ac:
    java.lang.String[] AGGREGATE_TYPE_NAMES -> a
com.twitch.homescreenlock.TwitchConstants$TwitchStats -> com.twitch.homescreenlock.ad:
    com.twitch.homescreenlock.TwitchConstants$TwitchStats SCREEN_ON -> a
    com.twitch.homescreenlock.TwitchConstants$TwitchStats EXIT_BUTTON -> b
    com.twitch.homescreenlock.TwitchConstants$TwitchStats[] ENUM$VALUES -> c
    com.twitch.homescreenlock.TwitchConstants$TwitchStats[] values() -> values
    com.twitch.homescreenlock.TwitchConstants$TwitchStats valueOf(java.lang.String) -> valueOf
com.twitch.homescreenlock.TwitchDatabase -> com.twitch.homescreenlock.ae:
    boolean mExternalStorageAvailable -> a
    boolean mExternalStorageWriteable -> b
    java.lang.String state -> c
    com.twitch.homescreenlock.TwitchDatabase$DbHelper dbHelperTwitch -> d
    android.content.Context contextTwitch -> e
    android.database.sqlite.SQLiteDatabase databaseTwitch -> f
    int[] $SWITCH_TABLE$com$twitch$homescreenlock$CensusResponse$CensusAppType -> g
    int[] $SWITCH_TABLE$com$twitch$homescreenlock$TwitchConstants$TwitchStats -> h
    com.twitch.homescreenlock.TwitchDatabase open() -> a
    void close() -> b
    long createCogStudyEntry(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Boolean,java.lang.Boolean) -> a
    void clearCogStudyTable() -> c
    void dumpCogStudyToFile(android.app.Activity) -> a
    void clearPhotoRankingTable() -> d
    void dumpPhotoRankingToFile(android.app.Activity) -> b
    void checkAggregates(android.app.Activity) -> c
    void updateAggregates(java.lang.String) -> a
    void updateSTWaggregates(org.json.JSONObject) -> a
    int[] getPercentageForSentenceFeedback(java.lang.String,java.lang.String) -> a
    long updateLastChecked() -> i
    int getPercentageForResponse(java.lang.String,java.lang.String) -> b
    int getNumResponses(java.lang.String,java.lang.String) -> c
    void addResponse(com.twitch.homescreenlock.CensusResponse) -> a
    java.util.ArrayList getCachedResponses(android.app.Activity) -> d
    java.util.ArrayList getSlideToUnlockResponses(android.app.Activity) -> e
    java.util.ArrayList getCensusActivityResponses(android.app.Activity) -> f
    java.util.ArrayList getCensusPeopleResponses(android.app.Activity) -> g
    java.util.ArrayList getCensusDressResponses(android.app.Activity) -> h
    java.util.ArrayList getCensusEnergyResponses(android.app.Activity) -> i
    java.util.ArrayList getSTWResponses(android.app.Activity) -> j
    long createEntryPeopleCensus(java.lang.String,double,double,long,long) -> a
    long createEntryImages(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> a
    long createEntryDressCensus(java.lang.String,double,double,long,long) -> b
    long createSlideToUnlock(int,double,double,long,long) -> a
    long createStructuringTheWeb(java.lang.String,java.lang.String,java.lang.String,double,double,long,long) -> a
    long createEntryEnergyCensus(java.lang.String,double,double,long,long) -> c
    long createEntryActivityCensus(java.lang.String,double,double,long,long) -> d
    java.lang.String getStatType(com.twitch.homescreenlock.TwitchConstants$TwitchStats) -> d
    void incrementTwitchStats(com.twitch.homescreenlock.TwitchConstants$TwitchStats) -> a
    int getStat(com.twitch.homescreenlock.TwitchConstants$TwitchStats) -> b
    void resetStat(com.twitch.homescreenlock.TwitchConstants$TwitchStats) -> c
    long createEntryURLS(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.String) -> a
    java.lang.String getImageURL(int) -> a
    java.util.List getListOfSelectedRows() -> e
    int getNumberOfRows(java.lang.String) -> b
    int getNumberOfSelectedRows(java.lang.String) -> c
    void updateURLSelectedFlag(int) -> b
    void updateURLNotSelectedFlag() -> f
    void updateTopBottom(java.lang.String,java.lang.String,java.lang.String,long) -> a
    int[] $SWITCH_TABLE$com$twitch$homescreenlock$CensusResponse$CensusAppType() -> g
    int[] $SWITCH_TABLE$com$twitch$homescreenlock$TwitchConstants$TwitchStats() -> h
com.twitch.homescreenlock.TwitchDatabase$DbHelper -> com.twitch.homescreenlock.af:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.twitch.homescreenlock.TwitchUtils -> com.twitch.homescreenlock.ag:
    java.util.HashMap states -> a
    void registerExit(android.app.Activity) -> a
    boolean isOnline(android.app.Activity) -> b
    void disableUserLockScreen(android.app.Activity) -> c
    float getCurrLatitude(android.app.Activity) -> d
    float getCurrLongitude(android.app.Activity) -> e
    void setCurrLocation(android.app.Activity,float,float) -> a
    float getPrevLatitude(android.app.Activity) -> f
    float getPrevLongitude(android.app.Activity) -> g
    void setPrevLocation(android.app.Activity,float,float) -> b
    void setGeocodingStatus(android.app.Activity,boolean) -> a
    void setGeocodingSuccess(android.app.Activity,boolean) -> b
    boolean getGeocodingStatus(android.app.Activity) -> h
    boolean getGeocodingSuccess(android.app.Activity) -> i
    java.lang.String getLocationText(android.app.Activity) -> j
    void setLocationText(android.app.Activity,java.lang.String) -> a
    boolean hasSentEmail(android.app.Activity) -> k
    boolean hasPrevLocation(android.app.Activity) -> l
    void setPrevLocationStatus(android.app.Activity,boolean) -> c
    java.lang.String getEmailAddress(android.app.Activity) -> m
    void setEmail(android.app.Activity,java.lang.String) -> b
    boolean shouldUploadDB(android.app.Activity) -> n
    void setUploadDBStatus(android.app.Activity,boolean) -> d
    boolean shouldDumpPhotoRanking(android.app.Activity) -> o
    void setLastDumpedPhotos(android.app.Activity) -> p
    void setEmailStatus(android.app.Activity,boolean) -> e
    java.lang.String getPrevAppPref(android.content.Context) -> a
    void setPrevAppPref(android.content.Context,java.lang.String) -> a
    int getSTWrow(android.app.Activity) -> q
    void setSTWrow(android.app.Activity,int) -> a
    boolean twitchServerOnline() -> a
    boolean canUsePrevLocation(android.app.Activity) -> r
    int getPixelsFromDp(android.content.Context,int) -> a
    double distanceFrom(double,double,double,double) -> a
    java.lang.String getDeviceID(android.app.Activity) -> s
    java.lang.String getDeviceName() -> b
    java.lang.String getTimezone() -> c
    java.lang.String getStateCode(java.lang.String) -> a
    void initStates() -> d
com.twitch.homescreenlock.UpdateAggregatesTask -> com.twitch.homescreenlock.ah:
    java.util.ArrayList doInBackground(com.twitch.homescreenlock.UpdateAggregatesTask$Param[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.twitch.homescreenlock.UpdateAggregatesTask$Param -> com.twitch.homescreenlock.ai:
    android.app.Activity a -> a
    double latitude -> b
    double longitude -> c
    com.twitch.homescreenlock.TwitchDatabase db -> d
    com.twitch.homescreenlock.UpdateAggregatesTask this$0 -> e
org.apache.commons.lang3.ArrayUtils -> a.a.a.a.a:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> a
    java.lang.Class[] EMPTY_CLASS_ARRAY -> b
    java.lang.String[] EMPTY_STRING_ARRAY -> c
    long[] EMPTY_LONG_ARRAY -> d
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> e
    int[] EMPTY_INT_ARRAY -> f
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> g
    short[] EMPTY_SHORT_ARRAY -> h
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> i
    byte[] EMPTY_BYTE_ARRAY -> j
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> k
    double[] EMPTY_DOUBLE_ARRAY -> l
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> m
    float[] EMPTY_FLOAT_ARRAY -> n
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> o
    boolean[] EMPTY_BOOLEAN_ARRAY -> p
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> q
    char[] EMPTY_CHAR_ARRAY -> r
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> s
    java.lang.Object[] clone(java.lang.Object[]) -> a
    boolean isEmpty(char[]) -> a
org.apache.commons.lang3.StringEscapeUtils -> a.a.a.a.b:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> b
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> c
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> d
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> e
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> f
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> g
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> h
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> i
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> j
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> k
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> l
    java.lang.String escapeHtml4(java.lang.String) -> a
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> a.a.a.a.c:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> a.a.a.a.d:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.StringUtils -> a.a.a.a.e:
    java.util.regex.Pattern WHITESPACE_BLOCK -> a
    boolean isEmpty(java.lang.CharSequence) -> a
    boolean containsAny(java.lang.CharSequence,char[]) -> a
    boolean containsNone(java.lang.CharSequence,char[]) -> b
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> a
org.apache.commons.lang3.text.translate.AggregateTranslator -> a.a.a.a.a.a.a:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> a.a.a.a.a.a.b:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    java.lang.String translate(java.lang.CharSequence) -> a
    void translate(java.lang.CharSequence,java.io.Writer) -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> a
    java.lang.String hex(int) -> a
org.apache.commons.lang3.text.translate.CodePointTranslator -> a.a.a.a.a.a.c:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.EntityArrays -> a.a.a.a.a.a.d:
    java.lang.String[][] ISO8859_1_ESCAPE -> a
    java.lang.String[][] ISO8859_1_UNESCAPE -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> d
    java.lang.String[][] BASIC_ESCAPE -> e
    java.lang.String[][] BASIC_UNESCAPE -> f
    java.lang.String[][] APOS_ESCAPE -> g
    java.lang.String[][] APOS_UNESCAPE -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> j
    java.lang.String[][] ISO8859_1_ESCAPE() -> a
    java.lang.String[][] ISO8859_1_UNESCAPE() -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> d
    java.lang.String[][] BASIC_ESCAPE() -> e
    java.lang.String[][] BASIC_UNESCAPE() -> f
    java.lang.String[][] APOS_ESCAPE() -> g
    java.lang.String[][] APOS_UNESCAPE() -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> j
    java.lang.String[][] invert(java.lang.String[][]) -> a
org.apache.commons.lang3.text.translate.LookupTranslator -> a.a.a.a.a.a.e:
    java.util.HashMap lookupMap -> a
    int shortest -> b
    int longest -> c
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> a.a.a.a.a.a.f:
    java.util.EnumSet options -> a
    boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> a.a.a.a.a.a.g:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> a
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> b
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> c
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> d
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.text.translate.OctalUnescaper -> a.a.a.a.a.a.h:
    int OCTAL_MAX -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.UnicodeEscaper -> a.a.a.a.a.a.i:
    int below -> a
    int above -> b
    boolean between -> c
    org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int,int) -> a
    boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> a.a.a.a.a.a.j:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.net.MalformedServerReplyException -> a.a.a.b.a:
org.apache.commons.net.ProtocolCommandEvent -> a.a.a.b.b:
    int __replyCode -> a
    boolean __isCommand -> b
    java.lang.String __message -> c
    java.lang.String __command -> d
org.apache.commons.net.ProtocolCommandListener -> a.a.a.b.c:
    void protocolCommandSent(org.apache.commons.net.ProtocolCommandEvent) -> a
    void protocolReplyReceived(org.apache.commons.net.ProtocolCommandEvent) -> b
org.apache.commons.net.ProtocolCommandSupport -> a.a.a.b.d:
    java.lang.Object __source -> a
    org.apache.commons.net.util.ListenerList __listeners -> b
    void fireCommandSent(java.lang.String,java.lang.String) -> a
    void fireReplyReceived(int,java.lang.String) -> a
    int getListenerCount() -> a
org.apache.commons.net.SocketClient -> a.a.a.b.e:
    javax.net.SocketFactory __DEFAULT_SOCKET_FACTORY -> i
    javax.net.ServerSocketFactory __DEFAULT_SERVER_SOCKET_FACTORY -> j
    org.apache.commons.net.ProtocolCommandSupport __commandSupport -> k
    int _timeout_ -> a
    java.net.Socket _socket_ -> b
    int _defaultPort_ -> c
    java.io.InputStream _input_ -> d
    java.io.OutputStream _output_ -> e
    javax.net.SocketFactory _socketFactory_ -> f
    javax.net.ServerSocketFactory _serverSocketFactory_ -> g
    int connectTimeout -> h
    int receiveBufferSize -> l
    int sendBufferSize -> m
    java.nio.charset.Charset charset -> n
    void _connectAction_() -> a
    void connect(java.net.InetAddress,int) -> a
    void connect(java.lang.String,int) -> a
    void disconnect() -> b
    void closeQuietly(java.net.Socket) -> b
    void closeQuietly(java.io.Closeable) -> a
    boolean isConnected() -> c
    void setDefaultPort(int) -> a
    void setSoTimeout(int) -> b
    int getSoTimeout() -> d
    java.net.InetAddress getLocalAddress() -> e
    java.net.InetAddress getRemoteAddress() -> f
    boolean verifyRemote(java.net.Socket) -> a
    void fireReplyReceived(int,java.lang.String) -> a
    void fireCommandSent(java.lang.String,java.lang.String) -> a
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> g
org.apache.commons.net.ftp.FTP -> a.a.a.b.a.a:
    int _replyCode -> i
    java.util.ArrayList _replyLines -> j
    boolean _newReplyString -> k
    java.lang.String _replyString -> l
    java.lang.String _controlEncoding -> m
    org.apache.commons.net.ProtocolCommandSupport _commandSupport_ -> n
    boolean strictMultilineParsing -> o
    java.io.BufferedReader _controlInput_ -> p
    java.io.BufferedWriter _controlOutput_ -> q
    boolean __strictCheck(java.lang.String,java.lang.String) -> c
    boolean __lenientCheck(java.lang.String) -> f
    void __getReply() -> s
    void __getReplyNoReport() -> h
    void __getReply(boolean) -> a
    void _connectAction_() -> a
    void setControlEncoding(java.lang.String) -> a
    java.lang.String getControlEncoding() -> i
    void disconnect() -> b
    int sendCommand(java.lang.String,java.lang.String) -> b
    java.lang.String __buildMessage(java.lang.String,java.lang.String) -> d
    void __send(java.lang.String) -> g
    void __noop() -> j
    int sendCommand(org.apache.commons.net.ftp.FTPCmd) -> a
    int sendCommand(org.apache.commons.net.ftp.FTPCmd,java.lang.String) -> a
    int getReply() -> k
    java.lang.String[] getReplyStrings() -> l
    java.lang.String getReplyString() -> m
    int user(java.lang.String) -> b
    int pass(java.lang.String) -> c
    int quit() -> n
    int port(java.net.InetAddress,int) -> b
    int eprt(java.net.InetAddress,int) -> c
    int pasv() -> o
    int epsv() -> p
    int type(int,int) -> a
    int mode(int) -> c
    int feat() -> q
    int rest(java.lang.String) -> d
    int mkd(java.lang.String) -> e
    boolean isStrictMultilineParsing() -> r
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> g
org.apache.commons.net.ftp.FTPClient -> a.a.a.b.a.b:
    int __dataConnectionMode -> r
    int __dataTimeout -> s
    int __passivePort -> t
    java.lang.String __passiveHost -> u
    java.util.Random __random -> v
    int __activeMinPort -> w
    int __activeMaxPort -> x
    java.net.InetAddress __activeExternalHost -> y
    java.net.InetAddress __reportActiveExternalHost -> z
    java.net.InetAddress __passiveLocalHost -> A
    int __fileType -> B
    int __fileFormat -> C
    int __fileStructure -> D
    int __fileTransferMode -> E
    boolean __remoteVerificationEnabled -> F
    long __restartOffset -> G
    org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory __parserFactory -> H
    int __bufferSize -> I
    int __sendDataSocketBufferSize -> J
    int __receiveDataSocketBufferSize -> K
    boolean __listHiddenFiles -> L
    boolean __useEPSVwithIPv4 -> M
    java.lang.String __systemName -> N
    org.apache.commons.net.ftp.FTPFileEntryParser __entryParser -> O
    java.lang.String __entryParserKey -> P
    org.apache.commons.net.ftp.FTPClientConfig __configuration -> Q
    org.apache.commons.net.io.CopyStreamListener __copyStreamListener -> R
    long __controlKeepAliveTimeout -> S
    int __controlKeepAliveReplyTimeout -> T
    boolean __passiveNatWorkaround -> U
    java.util.regex.Pattern __PARMS_PAT -> V
    boolean __autodetectEncoding -> W
    java.util.HashMap __featuresMap -> X
    void __initDefaults() -> w
    void _parsePassiveModeReply(java.lang.String) -> f
    void _parseExtendedPassiveModeReply(java.lang.String) -> g
    boolean __storeFile(org.apache.commons.net.ftp.FTPCmd,java.lang.String,java.io.InputStream) -> a
    boolean _storeFile(java.lang.String,java.lang.String,java.io.InputStream) -> a
    java.net.Socket _openDataConnection_(java.lang.String,java.lang.String) -> c
    void _connectAction_() -> a
    void disconnect() -> b
    boolean login(java.lang.String,java.lang.String) -> d
    boolean logout() -> s
    int getActivePort() -> x
    java.net.InetAddress getHostAddress() -> y
    java.net.InetAddress getReportHostAddress() -> z
    boolean setFileType(int,int) -> b
    boolean setFileTransferMode(int) -> d
    boolean completePendingCommand() -> t
    boolean storeFile(java.lang.String,java.io.InputStream) -> a
    boolean hasFeature(java.lang.String) -> h
    boolean initFeatureMap() -> A
    boolean restart(long) -> a
    boolean makeDirectory(java.lang.String) -> i
    int getBufferSize() -> u
    boolean isUseEPSVwithIPv4() -> v
    void setControlKeepAliveTimeout(long) -> b
    java.io.OutputStream getBufferedOutputStream(java.io.OutputStream) -> a
    org.apache.commons.net.io.CopyStreamListener __mergeListeners(org.apache.commons.net.io.CopyStreamListener) -> a
org.apache.commons.net.ftp.FTPClient$CSL -> a.a.a.b.a.c:
    org.apache.commons.net.ftp.FTPClient parent -> a
    long idle -> b
    int currentSoTimeout -> c
    long time -> d
    int notAcked -> e
    void bytesTransferred(long,int,long) -> a
    void cleanUp() -> a
org.apache.commons.net.ftp.FTPClientConfig -> a.a.a.b.a.d:
    java.util.Map LANGUAGE_CODE_MAP -> a
org.apache.commons.net.ftp.FTPCmd -> a.a.a.b.a.e:
    org.apache.commons.net.ftp.FTPCmd ABOR -> a
    org.apache.commons.net.ftp.FTPCmd ACCT -> b
    org.apache.commons.net.ftp.FTPCmd ALLO -> c
    org.apache.commons.net.ftp.FTPCmd APPE -> d
    org.apache.commons.net.ftp.FTPCmd CDUP -> e
    org.apache.commons.net.ftp.FTPCmd CWD -> f
    org.apache.commons.net.ftp.FTPCmd DELE -> g
    org.apache.commons.net.ftp.FTPCmd EPRT -> h
    org.apache.commons.net.ftp.FTPCmd EPSV -> i
    org.apache.commons.net.ftp.FTPCmd FEAT -> j
    org.apache.commons.net.ftp.FTPCmd HELP -> k
    org.apache.commons.net.ftp.FTPCmd LIST -> l
    org.apache.commons.net.ftp.FTPCmd MDTM -> m
    org.apache.commons.net.ftp.FTPCmd MFMT -> n
    org.apache.commons.net.ftp.FTPCmd MKD -> o
    org.apache.commons.net.ftp.FTPCmd MLSD -> p
    org.apache.commons.net.ftp.FTPCmd MLST -> q
    org.apache.commons.net.ftp.FTPCmd MODE -> r
    org.apache.commons.net.ftp.FTPCmd NLST -> s
    org.apache.commons.net.ftp.FTPCmd NOOP -> t
    org.apache.commons.net.ftp.FTPCmd PASS -> u
    org.apache.commons.net.ftp.FTPCmd PASV -> v
    org.apache.commons.net.ftp.FTPCmd PORT -> w
    org.apache.commons.net.ftp.FTPCmd PWD -> x
    org.apache.commons.net.ftp.FTPCmd QUIT -> y
    org.apache.commons.net.ftp.FTPCmd REIN -> z
    org.apache.commons.net.ftp.FTPCmd REST -> A
    org.apache.commons.net.ftp.FTPCmd RETR -> B
    org.apache.commons.net.ftp.FTPCmd RMD -> C
    org.apache.commons.net.ftp.FTPCmd RNFR -> D
    org.apache.commons.net.ftp.FTPCmd RNTO -> E
    org.apache.commons.net.ftp.FTPCmd SITE -> F
    org.apache.commons.net.ftp.FTPCmd SMNT -> G
    org.apache.commons.net.ftp.FTPCmd STAT -> H
    org.apache.commons.net.ftp.FTPCmd STOR -> I
    org.apache.commons.net.ftp.FTPCmd STOU -> J
    org.apache.commons.net.ftp.FTPCmd STRU -> K
    org.apache.commons.net.ftp.FTPCmd SYST -> L
    org.apache.commons.net.ftp.FTPCmd TYPE -> M
    org.apache.commons.net.ftp.FTPCmd USER -> N
    org.apache.commons.net.ftp.FTPCmd ABORT -> O
    org.apache.commons.net.ftp.FTPCmd ACCOUNT -> P
    org.apache.commons.net.ftp.FTPCmd ALLOCATE -> Q
    org.apache.commons.net.ftp.FTPCmd APPEND -> R
    org.apache.commons.net.ftp.FTPCmd CHANGE_TO_PARENT_DIRECTORY -> S
    org.apache.commons.net.ftp.FTPCmd CHANGE_WORKING_DIRECTORY -> T
    org.apache.commons.net.ftp.FTPCmd DATA_PORT -> U
    org.apache.commons.net.ftp.FTPCmd DELETE -> V
    org.apache.commons.net.ftp.FTPCmd FEATURES -> W
    org.apache.commons.net.ftp.FTPCmd FILE_STRUCTURE -> X
    org.apache.commons.net.ftp.FTPCmd GET_MOD_TIME -> Y
    org.apache.commons.net.ftp.FTPCmd LOGOUT -> Z
    org.apache.commons.net.ftp.FTPCmd MAKE_DIRECTORY -> aa
    org.apache.commons.net.ftp.FTPCmd MOD_TIME -> ab
    org.apache.commons.net.ftp.FTPCmd NAME_LIST -> ac
    org.apache.commons.net.ftp.FTPCmd PASSIVE -> ad
    org.apache.commons.net.ftp.FTPCmd PASSWORD -> ae
    org.apache.commons.net.ftp.FTPCmd PRINT_WORKING_DIRECTORY -> af
    org.apache.commons.net.ftp.FTPCmd REINITIALIZE -> ag
    org.apache.commons.net.ftp.FTPCmd REMOVE_DIRECTORY -> ah
    org.apache.commons.net.ftp.FTPCmd RENAME_FROM -> ai
    org.apache.commons.net.ftp.FTPCmd RENAME_TO -> aj
    org.apache.commons.net.ftp.FTPCmd REPRESENTATION_TYPE -> ak
    org.apache.commons.net.ftp.FTPCmd RESTART -> al
    org.apache.commons.net.ftp.FTPCmd RETRIEVE -> am
    org.apache.commons.net.ftp.FTPCmd SET_MOD_TIME -> an
    org.apache.commons.net.ftp.FTPCmd SITE_PARAMETERS -> ao
    org.apache.commons.net.ftp.FTPCmd STATUS -> ap
    org.apache.commons.net.ftp.FTPCmd STORE -> aq
    org.apache.commons.net.ftp.FTPCmd STORE_UNIQUE -> ar
    org.apache.commons.net.ftp.FTPCmd STRUCTURE_MOUNT -> as
    org.apache.commons.net.ftp.FTPCmd SYSTEM -> at
    org.apache.commons.net.ftp.FTPCmd TRANSFER_MODE -> au
    org.apache.commons.net.ftp.FTPCmd USERNAME -> av
    org.apache.commons.net.ftp.FTPCmd[] $VALUES -> aw
    org.apache.commons.net.ftp.FTPCmd[] values() -> values
    org.apache.commons.net.ftp.FTPCmd valueOf(java.lang.String) -> valueOf
    java.lang.String getCommand() -> a
org.apache.commons.net.ftp.FTPConnectionClosedException -> a.a.a.b.a.f:
org.apache.commons.net.ftp.FTPFileEntryParser -> a.a.a.b.a.g:
org.apache.commons.net.ftp.FTPReply -> a.a.a.b.a.h:
    boolean isPositivePreliminary(int) -> a
    boolean isPositiveCompletion(int) -> b
    boolean isPositiveIntermediate(int) -> c
org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory -> a.a.a.b.a.a.a:
    java.util.regex.Pattern JAVA_QUALIFIED_NAME_PATTERN -> a
org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory -> a.a.a.b.a.a.b:
org.apache.commons.net.io.CRLFLineReader -> a.a.a.b.b.a:
    java.lang.String readLine() -> readLine
org.apache.commons.net.io.CopyStreamAdapter -> a.a.a.b.b.b:
    org.apache.commons.net.util.ListenerList internalListeners -> a
    void bytesTransferred(long,int,long) -> a
    void addCopyStreamListener(org.apache.commons.net.io.CopyStreamListener) -> a
org.apache.commons.net.io.CopyStreamException -> a.a.a.b.b.c:
    long totalBytesTransferred -> a
org.apache.commons.net.io.CopyStreamListener -> a.a.a.b.b.d:
    void bytesTransferred(long,int,long) -> a
org.apache.commons.net.io.ToNetASCIIOutputStream -> a.a.a.b.b.e:
    boolean __lastWasCR -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
org.apache.commons.net.io.Util -> a.a.a.b.b.f:
    long copyStream(java.io.InputStream,java.io.OutputStream,int,long,org.apache.commons.net.io.CopyStreamListener,boolean) -> a
    void closeQuietly(java.net.Socket) -> a
org.apache.commons.net.util.ListenerList -> a.a.a.b.c.a:
    java.util.concurrent.CopyOnWriteArrayList __listeners -> a
    void addListener(java.util.EventListener) -> a
    int getListenerCount() -> a
    java.util.Iterator iterator() -> iterator
